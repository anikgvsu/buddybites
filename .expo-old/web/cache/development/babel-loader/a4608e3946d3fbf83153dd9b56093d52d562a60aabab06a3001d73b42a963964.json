{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport RenderHtml from 'react-native-render-html';\nimport { getFoodFacts } from \"../api/FoodAPI.js\";\nimport { StringToJSX } from \"../helpers/String2JSX.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RecepieScreen = function RecepieScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useWindowDimensions = useWindowDimensions(),\n    width = _useWindowDimensions.width;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    ingredients = _useState2[0],\n    setIngredients = _useState2[1];\n  var _useState3 = useState({\n      image: '',\n      title: '',\n      instruction: '',\n      summary: ''\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    recipe = _useState4[0],\n    setRecipe = _useState4[1];\n  var getRecipe = function getRecipe() {\n    getFoodFacts(ingredients, function (data) {\n      console.log(\"food data here\", data, data.recipes[0].image, data.recipes[0].instructions, data.recipes[0].summary);\n      setRecipe({\n        image: data.recipes[0].image,\n        instruction: data.recipes[0].instructions,\n        summary: data.recipes[0].summary,\n        title: data.recipes[0].title\n      });\n    });\n  };\n  var renderRecipe = function renderRecipe(recipe) {\n    if (recipe.title === '') {\n      return _jsx(View, {});\n    } else {\n      return _jsxs(View, {\n        style: styles.weatherView,\n        children: [_jsx(Image, {\n          style: styles.recipeImage,\n          source: recipe.image\n        }), _jsxs(View, {\n          children: [_jsx(Text, {\n            style: styles.recipeTitle,\n            children: recipe.title\n          }), _jsx(RenderHtml, {\n            contentWidth: width,\n            source: {\n              html: recipe.instruction\n            }\n          }), _jsx(RenderHtml, {\n            contentWidth: width,\n            source: {\n              html: recipe.summary\n            }\n          })]\n        })]\n      });\n    }\n  };\n  useEffect(function () {\n    navigation.setOptions({\n      headerLeft: function headerLeft() {\n        return _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return navigation.navigate(\"EventList\");\n          },\n          children: _jsx(View, {\n            style: styles.addButton,\n            children: _jsx(Text, {\n              style: styles.addButtonText,\n              children: \"Back\"\n            })\n          })\n        });\n      }\n    });\n  });\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      children: [_jsx(TextInput, {\n        style: {\n          height: 40,\n          borderColor: 'gray',\n          borderWidth: 1\n        },\n        onChangeText: setIngredients,\n        value: ingredients,\n        placeholder: \"type ingrediants saparated by commas...\"\n      }), _jsx(Button, {\n        title: \"Get Recepie\",\n        onPress: getRecipe\n      })]\n    }), renderRecipe(recipe)]\n  });\n};\nvar styles = StyleSheet.create({\n  weatherView: {\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: 50,\n    marginBottom: 20\n  },\n  recipeImage: {\n    width: 200,\n    height: 200\n  },\n  weatherDetails: {\n    marginLeft: 10\n  },\n  recipeTitle: {\n    fontSize: 30,\n    marginTop: 20,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  description: {\n    fontSize: 18\n  },\n  container: {\n    padding: 10,\n    backgroundColor: \"#E8EAF6\",\n    flex: 1\n  },\n  headerButton: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n    margin: 10\n  },\n  buttons: {\n    padding: 10\n  },\n  addButton: {},\n  addButtonText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    margin: 20\n  }\n});\nexport default RecepieScreen;","map":{"version":3,"names":["React","useState","useEffect","View","FlatList","Image","TextInput","StyleSheet","Text","Button","TouchableOpacity","useWindowDimensions","RenderHtml","getFoodFacts","StringToJSX","jsx","_jsx","jsxs","_jsxs","RecepieScreen","_ref","navigation","_useWindowDimensions","width","_useState","_useState2","_slicedToArray","ingredients","setIngredients","_useState3","image","title","instruction","summary","_useState4","recipe","setRecipe","getRecipe","data","console","log","recipes","instructions","renderRecipe","style","styles","weatherView","children","recipeImage","source","recipeTitle","contentWidth","html","setOptions","headerLeft","onPress","navigate","addButton","addButtonText","container","height","borderColor","borderWidth","onChangeText","value","placeholder","create","flexDirection","alignItems","marginTop","marginBottom","weatherDetails","marginLeft","fontSize","fontWeight","textAlign","description","padding","backgroundColor","flex","headerButton","color","margin","buttons"],"sources":["/Users/shafiqulanik/GVSU/S23/CIS 657 - Mobile Application Development/Project/buddybites/screens/RecepieScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, FlatList, Image, TextInput, StyleSheet, Text, Button, TouchableOpacity } from 'react-native';\nimport { useWindowDimensions } from 'react-native';\nimport RenderHtml from 'react-native-render-html';\n\nimport {getFoodFacts} from '../api/FoodAPI.js';\nimport {StringToJSX} from \"../helpers/String2JSX.js\";\n\nconst RecepieScreen = ({ navigation }) => {\n  const { width } = useWindowDimensions();\n  const [ingredients, setIngredients] = useState(\"\");\n  const [recipe, setRecipe] = useState({\n    image: '',\n    title: '',\n    instruction: '',\n    summary: '',\n  })\n\n  const getRecipe = () => {\n    getFoodFacts(ingredients, (data) => {\n      console.log(\"food data here\",data, data.recipes[0].image, data.recipes[0].instructions, data.recipes[0].summary);\n      setRecipe({image: data.recipes[0].image, instruction: data.recipes[0].instructions, \n        summary: data.recipes[0].summary, title: data.recipes[0].title})\n    });\n  }\n  const renderRecipe = (recipe) => {\n      if (recipe.title === '') {\n        return <View></View>;\n      } else {\n        return (\n          <View style={styles.weatherView}>\n            <Image\n              style={styles.recipeImage}\n              source={recipe.image}\n            />\n            <View>\n              <Text style={styles.recipeTitle}>\n                {recipe.title}\n              </Text>\n              <RenderHtml contentWidth={width} source={{html:recipe.instruction}}/>\n              <RenderHtml contentWidth={width} source={{html:recipe.summary}}/>\n\n            </View>\n          </View>\n        );\n      }\n    };\n\n    useEffect(() => {\n      navigation.setOptions({\n        headerLeft: () => (\n          <TouchableOpacity\n            onPress={() =>\n              navigation.navigate(\"EventList\")\n            }\n          >\n            <View style={styles.addButton}>\n              <Text style={styles.addButtonText}>Back</Text>\n            </View>\n          </TouchableOpacity>\n        ),\n      });\n    });\n    return (\n        <View style={styles.container}>\n          <View>\n            <TextInput\n              style={{ height: 40, borderColor: 'gray', borderWidth: 1 }}\n              onChangeText={setIngredients}\n              value={ingredients}\n              placeholder=\"type ingrediants saparated by commas...\"\n            />\n            <Button title=\"Get Recepie\" onPress={getRecipe} />\n          </View>\n          {renderRecipe(recipe)}\n        </View>\n    );\n};\n\n\n\n  const styles = StyleSheet.create({\n    weatherView: {\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginTop: 50,\n      marginBottom: 20,\n    },\n    recipeImage: {\n      width: 200,\n      height: 200,\n    },\n    weatherDetails: {\n      marginLeft: 10,\n    },\n    recipeTitle: {\n      fontSize: 30,\n      marginTop: 20,\n      fontWeight: 'bold',\n      textAlign: 'center',\n    },\n    description: {\n      fontSize: 18,\n    },\n    container: {\n      padding: 10,\n      backgroundColor: \"#E8EAF6\",\n      flex: 1,\n    },\n    headerButton: {\n      color: \"#fff\",\n      fontWeight: \"bold\",\n      margin: 10,\n    },\n    buttons: {\n      padding: 10,\n    },\n    addButton: {\n      // position: 'absolute',\n      // top: 10,\n      // right: 10,\n      // backgroundColor: '#007AFF',\n      // borderRadius: 10,\n      // paddingVertical: 8,\n      // paddingHorizontal: 16,\n      // elevation: 2,\n    },\n    addButtonText: {\n      color: 'white',\n      fontSize: 16,\n      fontWeight: 'bold',\n      margin: 20,\n    },\n});\n\nexport default RecepieScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}