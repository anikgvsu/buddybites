{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { apiKey, appId } from \"./api_key\";\nvar query = 'apple';\nvar tags = \"vegetarian\";\nimport axios from 'axios';\nvar FoodServer = axios.create({\n  baseURL: \"https://api.spoonacular.com/recipes/random\"\n});\nFoodServer.interceptors.request.use(function _callee(config) {\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          config.headers.Accept = 'application/json';\n          return _context.abrupt(\"return\", config);\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}, function (err) {\n  return Promise.reject(err);\n});\nexport var getFoodFacts = function _callee2(ingredients, callback) {\n  var response;\n  return _regeneratorRuntime.async(function _callee2$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(FoodServer.get(\"?tags=\" + ingredients + \"&apiKey=\" + apiKey + \"&number=1\"));\n        case 2:\n          response = _context2.sent;\n          callback(response.data);\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport default FoodServer;","map":{"version":3,"names":["apiKey","appId","query","tags","axios","FoodServer","create","baseURL","interceptors","request","use","_callee","config","_regeneratorRuntime","async","_callee$","_context","prev","next","headers","Accept","abrupt","stop","Promise","err","reject","getFoodFacts","_callee2","ingredients","callback","response","_callee2$","_context2","awrap","get","sent","data"],"sources":["/Users/shafiqulanik/GVSU/S23/CIS 657 - Mobile Application Development/Project/buddybites/api/FoodAPI.js"],"sourcesContent":["import { apiKey, appId} from './api_key';\nconst query = 'apple';\n\n/* const apiUrl = `https://api.edamam.com/api/food-database/v2/parser?ingr=${encodeURIComponent(\n  query\n)}&app_id=${appId}&app_key=${apiKey}`; */\n\n\nconst tags = \"vegetarian\"\nimport axios from 'axios';\nconst FoodServer = axios.create({\n    baseURL: \"https://api.spoonacular.com/recipes/random\",\n});\n\nFoodServer.interceptors.request.use(\n    async (config) => {\n        config.headers.Accept = 'application/json';\n        return config;\n    },\n    (err) => {\n        return Promise.reject(err);\n    }\n);\n\nexport const getFoodFacts = async (ingredients, callback) => {\n    const response = await FoodServer.get(\n        `?tags=${ingredients}&apiKey=${apiKey}&number=1`\n    );\n    callback(response.data)\n};\n\nexport default FoodServer;"],"mappings":";AAAA,SAASA,MAAM,EAAEC,KAAK;AACtB,IAAMC,KAAK,GAAG,OAAO;AAOrB,IAAMC,IAAI,GAAG,YAAY;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,IAAMC,UAAU,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAE;AACb,CAAC,CAAC;AAEFF,UAAU,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/B,SAAAC,QAAOC,MAAM;EAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;IAAA;MAAA,QAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UACTN,MAAM,CAACO,OAAO,CAACC,MAAM,GAAG,kBAAkB;UAAC,OAAAJ,QAAA,CAAAK,MAAA,WACpCT,MAAM;QAAA;QAAA;UAAA,OAAAI,QAAA,CAAAM,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA,CAChB,EACD,UAACC,GAAG,EAAK;EACL,OAAOD,OAAO,CAACE,MAAM,CAACD,GAAG,CAAC;AAC9B,CACJ,CAAC;AAED,OAAO,IAAME,YAAY,GAAG,SAAAC,SAAOC,WAAW,EAAEC,QAAQ;EAAA,IAAAC,QAAA;EAAA,OAAAjB,mBAAA,CAAAC,KAAA,UAAAiB,UAAAC,SAAA;IAAA;MAAA,QAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;QAAA;UAAAc,SAAA,CAAAd,IAAA;UAAA,OAAAL,mBAAA,CAAAoB,KAAA,CAC7B5B,UAAU,CAAC6B,GAAG,YACxBN,WAAW,gBAAW5B,MAAM,cACzC,CAAC;QAAA;UAFK8B,QAAQ,GAAAE,SAAA,CAAAG,IAAA;UAGdN,QAAQ,CAACC,QAAQ,CAACM,IAAI,CAAC;QAAA;QAAA;UAAA,OAAAJ,SAAA,CAAAV,IAAA;MAAA;IAAA;EAAA,qBAAAC,OAAA;AAAA,CAC1B;AAED,eAAelB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}